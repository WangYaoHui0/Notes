1.模板分离编译
	（1）分离编译的概念：
		- 一个程序（项目）由若干个源文件共同实现，而每个源文件单独编译生成目标文件，最后将所有目标
			文件链接起来形成单一的可执行文件的过程称为分离编译模式。
			- 解决办法：将声明和定义放到一个文件"xxx.hpp"里面或者"xxx.h"也可以；
					模板定义的位置显示实例化。

	（2）模板的分离编译：
		- 如果模板的声明与定义分离，在头文件中进行声明，源文件中完成定义，在另一个源文件中进行调用，
			就会导致链接错误。

		- C/C++程序要运行，一般要经过以下步骤：
			- 预处理 ---> 编译 ---> 汇编 ---> 链接；

			- 编译阶段：对程序按照语言特性进行词法、语法、语义分析，错误检查无误后生成汇编代码；
			- 注意：头文件不参与编译，编译器对工程中的多个源文件是分离开单独编译的。

			- 链接阶段：将多个.obj文件合并成一个，并解决没有解决的地址问题。

2.模板总结
	（1）优点：
		- 模板复用了代码，节省资源，更快的迭代开发，C++的标准模板库(STL)因此而产生，
		- 增强了代码的灵活性。

	（2）缺点：
		- 模板会导致代码膨胀问题，也会导致编译时间变长，
		- 出现模板编译错误时，错误信息非常凌乱，不易定位错误。