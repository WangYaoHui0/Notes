1.友元
	（1）友元分为：友元函数和友元类；
	（2）友元提供了一种突破封装的方式，有时提供了便利，但是友元会增加耦合度，破坏了封装，所以友元不宜多用；
	（3）友元函数：友元函数可以直接访问类的私有成员，是定义在类外部的普通函数，不属于任何类，但需要在类的
		内部声明，声明时需要加friend关键字；
	（4）注意：
		-友元函数可以访问类的私有成员，但不是类的成员函数，
		-友元函数不能用const修饰，
		-友元函数可以在类定义的任何地方声明，不受类访问限定符限制，
		-一个函数可以是多个类的友元函数，
		-友元函数的调用与普通函数的调用和原理相同；
	（5）友元类：友元类的所有成员函数都可以是另一个类的友元函数，都可以访问另一个类中的非公有成员；
	（6）注意：
		-友元关系是单向的，不具有交换性，
		-友元关系不能传递；

2.内部类
	（1）概念：如果一个类定义在另一类的内部，那么这个内部类就叫做内部类；但此时，该内部类是一个独立的类，
			它不属于外部类，更不能通过外部类的对象去调用内部类，外部类对内部类没有任何优越的访问
			权限；
		注：内部类是外部类的友元类，因此，内部类可以通过外部类的对象参数来访问外部类中的所有成员，但
			是根据友元类的定义，无交换性，外部类不是内部类的友元类；
	（2）特性：
		-内部类可以定义在外部类的public、private、protected都是可以的，
		-内部类可以直接访问外部类的static、枚举成员，不需要外部类的对象/类名，
		-sizeof（外部类） = 外部类，和内部类没有任何关系；
	（3）问题：
					A::B b;
		A a;					b.PrintA(A());------ m 值为0？
		b.PrintA(a);------ m 值为随机值？