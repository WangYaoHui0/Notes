1.类与对象的初步认知：
	a.C语言是面向过程的，关注的是过程，分析出求解问题的步骤，通过函数调用逐步解决问题；
	b.C++是基于面向对象的，关注的是对象，将一件事情拆分成不同的对象，靠对象之间的交互完成；

2.类的引入：
	a.在C语言中，结构体中只能定义变量，在C++中，结构体内不仅可以定义变量，也可以定义函数；
	b.在C++中，一般使用class来代替struct；

3.类的定义：class ClassName{};
	a.class为定义类的关键字，ClassName为类的名字，{}中为类的主体，需注意类定义结束时后面加分号；
	b.类中的元素称为类的成员：类中的数据称为类的属性或成员变量；类中的函数称为类的方法或成员函数；
	c.类有两种定义方式：
		-声明与定义全部放在类体中，需要注意的是：成员函数如果在类中定义，编译器可能将其当成
			内联函数处理，
		-声明与定义分离，声明放在类的头文件.h文件中，定义放在类的实现文件.cpp文件中；

4.类的访问限定符及封装
	->访问限定符：
	a.C++实现封装的方式：用类将对象的属性与方法结合在一起，让对象更加完善，通过访问权限，选择性的将
		其接口提供给外部的用户使用；
	b.访问限定符有三种：
		-i.public	ii.protected	iii.private
	c.访问限定符说明：
		-public修饰的成员在类外可以直接被访问，protected和private修饰的成员在类外不能直接被访问；
		-访问权限作用域从该访问限定符出现的位置开始直到下一个访问限定符出现时为止；
		-class的默认访问权限为private，struct为public（因为struct要兼容C）；
		-访问限定符只在编译时有用，当数据映射到内存后，没有任何限定符上的区别；

	面试题：
		-C++中struct和class的区别是什么？
		答：C++需要兼容C语言，所以C++中struct可以当成结构体去使用。C++中struct还可以用来定义类，
			和class定义类是一样的，区别是struct的成员默认访问方式是public，class的成员默认
			访问方式是private；
	->封装：
	a.面试题：面向对象的三大特性：封装、继承、多态。
	b.在类和对象阶段，我们只研究类的封装特性：
		-封装：将数据和操作数据的方法进行有机结合，隐藏对象的属性和实现细节，仅对外公开接口来和
			对象进行交互。封装本质上是一种管理。

5.类的作用域
	a.类定义了一个新的作用域，类的所有成员都在类的作用域中。在类体外定义成员，需使用::作用域解析符
		指明成员属于哪个类域。

6.类的实例化
	a.概念：用类类型创建对象的过程，称为类的实例化；
	b.类只是一个类似模型的东西，限定类有哪些成员，定义出一个类并没有分配实际的内存空间来存储它；
	c.一个类可以实例化出多个对象，实例化出的对象才占用实际的物理空间，存储类成员变量；

7.类对象模型
	a.一个类的大小，实际上就是该类中“成员变量”之和，当然也要进行内存对齐，对于空类，编译器会给空类
		一个字节来唯一标识这个类；
	b.结构体内存对齐规则：
		-第一个成员在与结构体偏移量为0的地址处，
		-其他成员变量要对齐到对齐数的整数倍的地址处，
			对齐数 = 编译器默认的对齐数 与 该成员大小的较小值，
			VS中默认对齐数为8，gcc中的默认对齐数为4，
		-结构体总大小为：最大对齐数（所有变量类型最大者与默认对齐参数取最小）的整数倍，
		-如果嵌套了结构体，嵌套的结构体对齐到自己的最大对齐数的整数倍处，结构体的整体大小就是
			所有最大对齐数（含嵌套结构体的对齐数）的整数倍；

	面试题：
		-结构体怎么对齐？为什么要进行内存对齐？
		-如何让结构体按照指定的对齐参数进行对齐？
		-如何知道结构体中某个成员相对于结构体起始位置的偏移量？
		-什么是大小端？如何测试某台机器是大端还是小端，有没有遇到过要考虑大小端的场景？

8.this指针
	a.为了解决：类对象调用其成员函数时，无法确定成员函数是否设置的是本对象的问题，C++引入了this指针
		来解决该问题，即：C++编译器给每个“成员函数”增加了一个隐藏的指针参数，让该指针指向当前
		对象（函数运行时调用该函数的对象），在函数体中所有成员变量的操作，都是通过该指针去访问。
		不过这些所有的操作对用户来说是透明的，用户不需要传递，编译器自动完成；
	b.this指针的特性：
		-this指针的类型：类类型* const，
		-只能在“成员函数”的内部使用，
		-this指针本质上其实是一个成员函数的形参，是对象调用成员函数时，将对象地址作为实参传递
			给this形参，所以对象中不存储this指针，
		-this指针是成员函数第一个隐含的指针形参，一般情况下由编译器通过ecx寄存器自动传递，不需要
			用户传递；

	面试题：
		-this指针存在哪里？（ecx寄存器中）
		-this指针可以为空吗？（可以，在不需要this指针时可以为空）




















